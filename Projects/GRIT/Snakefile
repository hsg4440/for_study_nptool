# create a list of analysed file to produce
job_list=[]
for target in range(1,10):
  for third in range(0,2):
    job_list.append("root/analysis/GRIT_ts"+str(third)+"_"+str(target)+"um.root")
    print 

rule trigger:
  input:
    expand("{filename}",filename=job_list)

rule detector_file:
  output:
   "detector/grit_ts{on}_{th}um.detector"
  shell:
   """
   sed 's/@THICKNESS@/{wildcards.th}/g' detector/grit.detector.in  > detector/grit_ts{wildcards.on}_{wildcards.th}um.detector.in
   sed 's/@THIRDSTAGEFRONT@/{wildcards.on}/g' detector/grit_ts{wildcards.on}_{wildcards.th}um.detector.in  > detector/grit_ts{wildcards.on}_{wildcards.th}um.detector
   """

rule simulation:
  input:
    "detector/grit_ts{on}_{th}um.detector" 
  output:
    "root/simulation/GRIT_ts{on}_{th}um.root"
  shell:
    "npsimulation -D detector/grit_ts{wildcards.on}_{wildcards.th}um.detector -E reaction/132Sndp.reaction -O GRIT_ts{wildcards.on}_{wildcards.th}um -B run.mac" 

rule analysis:
  output:
    "root/analysis/GRIT_ts{on}_{th}um.root"
  input:
    "root/simulation/GRIT_ts{on}_{th}um.root"
  shell:
    "npanalysis -T root/simulation/GRIT_ts{wildcards.on}_{wildcards.th}um.root SimulatedTree -O GRIT_ts{wildcards.on}_{wildcards.th}um"

rule clean:
  shell:
   "rm -f detector/*.detector && rm -f root/analysis/*.root && rm -f root/simulation/*.root"
