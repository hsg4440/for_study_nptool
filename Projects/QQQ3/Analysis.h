#ifndef Analysis_h
#define Analysis_h
/*****************************************************************************
 * Copyright (C) 2009-2014    this file is part of the NPTool Project        *
 *                                                                           *
 * For the licensing terms see $NPTOOL/Licence/NPTool_Licence                *
 * For the list of contributors see $NPTOOL/Licence/Contributors             *
 *****************************************************************************/

/*****************************************************************************
 * Original Author: Adrien MATTA  contact address: a.matta@surrey.ac.uk      *
 *                                                                           *
 * Creation Date  : march 2025                                               *
 * Last update    :                                                          *
 *---------------------------------------------------------------------------*
 * Decription:                                                               *
 * Class describing the property of an Analysis object                       *
 *                                                                           *
 *---------------------------------------------------------------------------*
 * Comment:                                                                  *
 *                                                                           *
 *                                                                           *
 *****************************************************************************/
#include "NPEnergyLoss.h"
#include "NPReaction.h"
#include "NPVAnalysis.h"
#include "RootInput.h"
#include "RootOutput.h"
#include "TInitialConditions.h"
#include "TQQQ3Physics.h"
#include <TMath.h>
#include <TRandom3.h>
#include <TVector3.h>

class Analysis : public NPL::VAnalysis {
 public:
  Analysis();
  ~Analysis();

 public:
  void Init();
  void TreatEvent();
  void End();

  void InitOutputBranch();
  void InitInputBranch();
  void ReInitValue();
  static NPL::VAnalysis* Construct();

 private:
  double Ex;
  double ELab;
  double ThetaLab;
  double ThetaCM;
  NPL::Reaction* myReaction;
  TInitialConditions* myInit;
  //	Energy loss table: the G4Table are generated by the simulation
  EnergyLoss LightCD2;
  EnergyLoss LightAl;
  EnergyLoss LightSi;
  EnergyLoss BeamCD2;
  TVector3 BeamImpact;

  double TargetThickness;
  // Beam Energy
  double OriginalBeamEnergy; // AMEV
                             // intermediate variable
  TRandom3 Rand;
  int DetectorNumber;
  double ThetaNormalTarget;
  double ThetaM2Surface;
  double Si_E_M2;
  double CsI_E_M2;
  double Energy;
  double E_M2;

  double ThetaQQQ3Surface;
  double X_QQQ3;
  double Y_QQQ3;
  double Z_QQQ3;
  double Si_E_QQQ3;
  double E_QQQ3;
  double Si_X_QQQ3;
  double Si_Y_QQQ3;
  TQQQ3Physics* QQQ3;
};
#endif
